{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{366:function(s,e,n){\"use strict\";n.r(e);var a=n(42),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[n(\"h2\",{attrs:{id:\"权限控制\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#权限控制\"}},[s._v(\"#\")]),s._v(\" 权限控制\")]),s._v(\" \"),n(\"p\",[s._v(\"本系统权限控制采用\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"RBAC\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"思想。简单地说，一个用户拥有若干角色，每一个角色拥有若干个菜单，菜单中存在菜单权限与按钮权限， 这样，就构造成“用户-角色-菜单” 的授权模型。在这种模型中，用户与角色、角色与菜单之间构成了多对多的关系，如下图\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image17.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"p\",[s._v(\"本系统安全框架使用的是\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"Spring Security + Jwt Token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"， 访问后端接口需在请求头中携带\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"进行访问\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"数据交互\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据交互\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"数据交互\")])]),s._v(\" \"),n(\"p\",[s._v(\"用户登录 -> 后端验证登录返回\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"-> 前端带上\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"请求后端数据 -> 后端返回数据， 数据交互流程如下：\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image18.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"h3\",{attrs:{id:\"权限方法及注解\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#权限方法及注解\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"权限方法及注解\")])]),s._v(\" \"),n(\"p\",[s._v(\"在SpringSecurity安全框架中，提供了一些方法和注解来帮助我们进行权限判断和数据过滤\")]),s._v(\" \"),n(\"table\",[n(\"thead\",[n(\"tr\",[n(\"th\",[n(\"strong\",[s._v(\"表达式\")])]),s._v(\" \"),n(\"th\",[n(\"strong\",[s._v(\"描述\")])])])]),s._v(\" \"),n(\"tbody\",[n(\"tr\",[n(\"td\",[s._v(\"hasRole(String role)\")]),s._v(\" \"),n(\"td\",[s._v(\"当前用户是否拥有指定角色。如果用户具备给定角色就则返回true，否则出现403\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"hasAnyRole(String... roles)\")]),s._v(\" \"),n(\"td\",[s._v(\"多个角色是一个以逗号进行分隔的字符串。如果当前用户拥有指定角色中的任意一个则返回true。\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"hasAuthority(String authority)\")]),s._v(\" \"),n(\"td\",[s._v(\"如果当前的主体具有指定的权限，则返回 true,否则返回 false  。适用于单个角色，不适用于多个角色权限\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"hasAnyAuthority(String... authorities)\")]),s._v(\" \"),n(\"td\",[s._v(\"如果当前的主体有任何提供的角色（给定的作为一个逗号分隔的字符串列表）的话，返回 true。适用于多个角色权限\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"@Secured\")]),s._v(\" \"),n(\"td\",[s._v('判断是否具有角色，另外需要注意这里匹配的字符串需要加前缀\"ROLE_\"')])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"@PreAuthorize\")]),s._v(\" \"),n(\"td\",[s._v(\"注解适合进入方法前的权限验证，可以将登录用户的roles/permissions参数传到方法中。方法执行之前校验\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"@PostAuthorize\")]),s._v(\" \"),n(\"td\",[s._v(\"使用并不多，在方法执行后再进行权限验证，适合验证带有返回值的权限\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"@PostFilter\")]),s._v(\" \"),n(\"td\",[s._v(\"对返回的数据进行过滤\")])]),s._v(\" \"),n(\"tr\",[n(\"td\",[s._v(\"@PreFilter\")]),s._v(\" \"),n(\"td\",[s._v(\"对传入的数据进行过滤\")])])])]),s._v(\" \"),n(\"p\",[s._v(\"下面的接口表示用户拥有user:del权限就能能访问delete方法， 如果方法不加@preAuthorize注解，意味着所有用户都需要带上有效的token 后才能访问delete\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(' @ApiOperation(\"删除用户\")\\n    @DeleteMapping\\n    @PreAuthorize(\"@smpe.check(\\'user:del\\')\")\\n    @Transactional(rollbackFor = Exception.class)\\n    public Result<Void> delete(@RequestBody Set<Long> ids) {\\n        for (Long id : ids) {\\n            if (!checkLevel(id)) {\\n                log.error(\"【删除用户失败】角色权限不足，不能删除。\" + \"操作人id：\" + SecurityUtils.getCurrentUserId() + \"。预删除用户id：\" + id);\\n                throw new BadRequestException(\"角色权限不足，不能删除：\" + userService.getById(id).getUsername());\\n            }\\n        }\\n        boolean isDel = userService.removeByIds(ids);\\n        if (! isDel) {\\n            log.error(\"【删除用户失败】角色权限不足，不能删除。\" + \"操作人id：\" + SecurityUtils.getCurrentUserId() + \"。预删除用户id集合：\" + ids);\\n            throw new BadRequestException(\"【删除用户失败】\" + \"操作人id：\" + SecurityUtils.getCurrentUserId());\\n        }\\n        return Result.success();\\n    }\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\")])]),n(\"p\",[s._v(\"**check()**方法表示如果该身份是admin的话，直接返回true，不再进行多余判断。如果不是admin的话，将用户的所有身份进行判断，看是否有匹配的身份，若有返会true，无则返回false\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('@Service(value=\"smpe\")\\npublicclassPermissionConfig {\\npublicBooleancheck(String... permissions) {\\n// 获取当前用户的所有权限\\nList<String>smpePermissions=\\nSecurityUtils.getCurrentUser().getAuthorities().stream().map(GrantedAuthority::getAuthority).collect(Collectors.toList());\\n// 判断当前用户的所有权限是否包含接口上定义的权限\\nreturnsmpePermissions.contains(\"admin\") ||Arrays.stream(permissions).anyMatch(smpePermissions::contains);\\n    }\\n}\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\")])]),n(\"p\",[s._v(\"使用方式：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"@PreAuthorize(\\\"@smpe.check('user:del')\\\")\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"接口放行\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#接口放行\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"接口放行\")])]),s._v(\" \"),n(\"p\",[s._v(\"在我们使用的时候，有些接口是不需要验证权限的，这个时候就需要我们给接口放行，使用方式如下：\")]),s._v(\" \"),n(\"p\",[s._v(\"1、使用注解方式\")]),s._v(\" \"),n(\"p\",[s._v(\"只需要在Controller的方法上加入该注解即可\")]),s._v(\" \"),n(\"p\",[s._v(\"@AnonymousAccess2、修改配置文件方式\")]),s._v(\" \"),n(\"p\",[s._v(\"smpe-system -> modules -> security -> config -> SecurityConfig\")]),s._v(\" \"),n(\"p\",[s._v(\"使用\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"permitAll()\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"方法所有人都能访问，包括带上\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"访问\")]),s._v(\" \"),n(\"p\",[s._v(\"使用\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"anonymous()\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"所有人都能访问，但是带上\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"token\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"访问后会报错\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('// 关键代码，部分略\\nprotectedvoidconfigure(HttpSecurityhttpSecurity) throwsException {\\n// 搜寻匿名标记 url： @AnonymousAccess\\nMap<RequestMappingInfo, HandlerMethod>handlerMethodMap=\\napplicationContext.getBean(RequestMappingHandlerMapping.class).getHandlerMethods();\\n// 获取匿名标记\\nMap<String, Set<String>>anonymousUrls=getAnonymousUrl(handlerMethodMap);\\nlog.info(\"放行的接口(匿名访问)\"+anonymousUrls);\\nhttpSecurity\\n// 自定义匿名访问所有url放行：允许匿名和带Token访问，细腻化到每个 Request 类型\\n        // 放行OPTIONS请求\\n                .antMatchers(HttpMethod.OPTIONS, \"/**\").permitAll()\\n// GET\\n                .antMatchers(HttpMethod.GET,\\nanonymousUrls.get(RequestMethodEnum.GET.getType()).toArray(newString[0])).permitAll()\\n// POST\\n                .antMatchers(HttpMethod.POST,\\nanonymousUrls.get(RequestMethodEnum.POST.getType()).toArray(newString[0])).permitAll()\\n// PUT\\n                .antMatchers(HttpMethod.PUT,\\nanonymousUrls.get(RequestMethodEnum.PUT.getType()).toArray(newString[0])).permitAll()\\n// PATCH\\n                .antMatchers(HttpMethod.PATCH,\\nanonymousUrls.get(RequestMethodEnum.PATCH.getType()).toArray(newString[0])).permitAll()\\n// DELETE\\n                .antMatchers(HttpMethod.DELETE,\\nanonymousUrls.get(RequestMethodEnum.DELETE.getType()).toArray(newString[0])).permitAll()\\n// 所有类型的接口都放行\\n                .antMatchers(anonymousUrls.get(RequestMethodEnum.ALL.getType()).toArray(newString[0])).permitAll()\\n// 所有请求都需要认证\\n                .anyRequest().authenticated()\\n                .and().apply(securityConfigurerAdapter());\\n}\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),n(\"br\")])]),n(\"h3\",{attrs:{id:\"越权处理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#越权处理\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"越权处理\")])]),s._v(\" \"),n(\"p\",[s._v(\"下面的\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"if (! checkLevel(id))\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"判断条件表示如果当前用户的权限级别 > 被删除的用户权限级别，则向下执行，若当前用户的权限级别 <= 被删除的用户，则抛出异常。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('@ApiOperation(\"删除用户\")\\n@DeleteMapping\\n@PreAuthorize(\"@smpe.check(\\'user:del\\')\")\\n@Transactional(rollbackFor=Exception.class)\\npublicResult<Void>delete(@RequestBodySet<Long>ids) {\\nfor (Longid : ids) {\\nif (!checkLevel(id)) { // 通过checkLevel()方法判断当前用户是否越权，并返回对应的信息。\\nlog.error(\"【删除用户失败】角色权限不足，不能删除。\"+\"操作人id：\"+SecurityUtils.getCurrentUserId() +\"。预删除用户id：\"+id);\\nthrownewBadRequestException(\"角色权限不足，不能删除：\"+userService.getById(id).getUsername());\\n        }\\n    }\\nbooleanisDel=userService.removeByIds(ids);\\nif (!isDel) {\\nlog.error(\"【删除用户失败】角色权限不足，不能删除。\"+\"操作人id：\"+SecurityUtils.getCurrentUserId() +\"。预删除用户id集合：\"+ids);\\nthrownewBadRequestException(\"【删除用户失败】\"+\"操作人id：\"+SecurityUtils.getCurrentUserId());\\n    }\\nreturnResult.success();\\n}\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\")])]),n(\"p\",[s._v(\"源码\")]),s._v(\" \"),n(\"p\",[s._v(\"通过\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"checkLevel()\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"方法处理越权行为\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n* description:操作多个角色时，判断用户权限（通过role的level）\\n* @param roleIds 预操作角色的id集合\\n* @return true 有权限\\n*/\\nprivatebooleancheckLevel(Set<Long>roleIds) {\\nIntegercurrentLevel=Collections.min(roleService.findRoleByUserId(SecurityUtils\\n                .getCurrentUserId()).stream().map(RoleSmallDTO::getLevel).collect(Collectors.toList()));\\nIntegeroptLevel=roleService.findRoleMinLeave(roleIds);\\n//level 越小权限越大\\nreturncurrentLevel<=optLevel;\\n    }\\n\\n/**\\n* description:操作用户时，判断用户权限\\n* @param userId 预操作用户id\\n* @return true 有权限\\n*/\\nprivatebooleancheckLevel(LonguserId) {\\nIntegercurrentLevel=\\nCollections.min(roleService.findRoleByUserId(SecurityUtils.getCurrentUserId()).stream().map\\n                        (RoleSmallDTO::getLevel).collect(Collectors.toList()));\\nIntegeroptLevel=\\nCollections.min(roleService.findRoleByUserId(userId).stream().map(RoleSmallDTO::getLevel).collect\\n                        (Collectors.toList()));\\n//level 越小权限越大\\nreturncurrentLevel<=optLevel;\\n    }\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"系统缓存\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#系统缓存\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"系统缓存\")])]),s._v(\" \"),n(\"p\",[s._v(\"缓存我们使用的是Redis，默认使用Spring的注解对系统缓存进行操作。\")]),s._v(\" \"),n(\"p\",[s._v(\"配置文件位于\"),n(\"strong\",[s._v(\"smpe-common\")]),s._v(\"模块下的\"),n(\"strong\",[s._v(\"marchsoft\\\\config\\\\RedisConfig.java\")]),s._v(\"目录。\")]),s._v(\" \"),n(\"p\",[s._v(\"同时我们提供了redis常用的工具类,位于\"),n(\"strong\",[s._v(\"smpe-common\")]),s._v(\"模块下的\"),n(\"strong\",[s._v(\"marchsoft\\\\utils\\\\RedisUtils.java\")]),s._v(\"目录。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"缓存注解\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存注解\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"缓存注解\")])]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"@CacheConfig：主要用于配置该类中会用到的一些共用的缓存配置                                                         ServiceImpl\\n@Cacheable：主要方法的返回值将被加入缓存。在查询时，会先从缓存中获取，若不存在才再发起对数据库的访问                       \\n@CachePut：主要用于数据新增和修改操作  \\n@CacheEvict：配置于函数上，通常用在删除方法上，用来从缓存中移除相应数据\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"使用方法：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('@Service\\n@RequiredArgsConstructor\\n@CacheConfig(cacheNames = \"menu\")\\n@Slf4j\\npublic class MenuServiceImpl extends BasicServiceImpl<MenuMapper, Menu> implements IMenuService {\\n}\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"异常处理\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#异常处理\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"异常处理\")])]),s._v(\" \"),n(\"p\",[s._v(\"我们开发项目时，数据在请求过程中发生错误是避免不了的，我们需要捕获这些异常信息，做统一的异常处理。\")]),s._v(\" \"),n(\"p\",[s._v(\"如：登陆失败，权限不足，数据为空，请求失败等。这些异常如果不经过处理，会对前端小伙伴造成非常大的困扰。\")]),s._v(\" \"),n(\"p\",[s._v(\"做统一的异常返回，是项目中必不可少的一个模块。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"自定义异常\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自定义异常\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"自定义异常\")])]),s._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[s._v(\"通用异常\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[s._v(\"封装了BadRequestException作为通用的异常处理\")]),s._v(\" \"),n(\"ol\",[n(\"li\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"@Getter\\npublic class BadRequestException extends RuntimeException {\\n\\nprivate Integer status = BAD_REQUEST.value();\\n\\npublic BadRequestException(String msg) {\\nsuper(msg);\\n    }\\n\\npublic BadRequestException(Integer status, String msg) {\\nsuper(msg);\\nthis.status = status;\\n    }\\n\\npublic BadRequestException(ResultEnum resultEnum) {\\nsuper(resultEnum.getMsg());\\nthis.status = resultEnum.getCode();\\n    }\\n\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\")])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"处理自定义异常(在全局异常处理中：src/main/java/marchsoft/exception/handler/GlobalExceptionHandler.java)\")]),s._v(\" \"),n(\"ol\",[n(\"li\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n * 功能描述：处理自定义异常\\n *\\n * @param e 自定义异常\\n * @return restful风格的异常信息\\n * @author RenShiWei\\n * Date: 2020/4/13 22:18\\n */\\n@ExceptionHandler(value = BadRequestException.class)\\npublic ResponseEntity<Result<String>> badRequestException(BadRequestException e) {\\nlog.error(e.getMessage(), e);\\n//默认到后端的请求，状态码都为200，自定义的异常由封装的code去控制\\n    return ResponseEntity.status(HttpStatus.OK).body(Result.error(e.getMessage()));\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])])])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"其他异常的处理\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[s._v(\"权限不足异常\")]),s._v(\" \"),n(\"ol\",[n(\"li\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n * description: security的角色权限不足异常\\n *\\n * @param e 权限不足异常\\n * @return 200状态码 403自定义code\\n * @author RenShiWei\\n * Date: 2020/8/7 19:52\\n */\\n@ExceptionHandler(AccessDeniedException.class)\\npublic ResponseEntity<Result<String>> handleAccessDeniedException(AccessDeniedException e) {\\nlog.error(e.getMessage(), e);\\nreturn ResponseEntity.status(HttpStatus.FORBIDDEN).body(Result.error(ResultEnum.IDENTITY_NOT_POW.getCode(),\\n            ResultEnum.IDENTITY_NOT_POW.getMsg()));\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\")])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"不可知异常处理\")]),s._v(\" \"),n(\"ol\",[n(\"li\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n * 功能描述：处理所有不可知的异常\\n * @param e 异常 Throwable(异常的根类)\\n * @return 异常对象信息\\n * @author RenShiWei\\n * Date: 2020/7/10 10:54\\n */\\n@ExceptionHandler(Throwable.class)\\npublic ResponseEntity<Result<String>> handleException(Throwable e) {\\n// 打印堆栈信息\\n    log.error(e.getMessage(), e);\\nreturn ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(Result.error(ResultEnum.SEVER_ERROR.getCode(), ResultEnum.SEVER_ERROR.getMsg()));\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\")])])]),s._v(\" \"),n(\"li\",[n(\"p\",[s._v(\"其他异常处理\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"详情\\t请见：src/main/java/marchsoft/exception/handler/GlobalExceptionHandler.java\")])])])])])]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('// 通用异常\\nthrow new BadRequestException(\"发生了异常\");\\n// 通用异常，使用自定义状态码\\nthrow new BadRequestException(HttpStatus.OK, \"发送了异常\");\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"代码生成\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码生成\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"代码生成\")])]),s._v(\" \"),n(\"p\",[s._v(\"代码生成是在smpt-system包下完成的，目录如下：\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image19.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"进行MybatisPlus代码生成的模板配置\")])]),s._v(\" \"),n(\"p\",[s._v(\"这里使用了自定义模板引擎（freemarker），这样才方便我们进行深度定制。（当然也可以使用官方的默认配置）。\")]),s._v(\" \"),n(\"p\",[s._v(\"模板引擎文件放置目录：\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image20.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"h3\",{attrs:{id:\"步骤一-确定代码生成位置及作者信息\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤一-确定代码生成位置及作者信息\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"步骤一：确定代码生成位置及作者信息\")])]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_1-1是否在项目根目录下生成代码-y为是-n为否-。多模块开发-要在子模块下生成代码请输入n\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-1是否在项目根目录下生成代码-y为是-n为否-。多模块开发-要在子模块下生成代码请输入n\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"1.1是否在项目根目录下生成代码（y为是，n为否）。多模块开发，要在子模块下生成代码请输入n\")])]),s._v(\" \"),n(\"p\",[s._v(\"如果不是多模块开发，或者想要在根父工程生成代码，直接输入y。\")]),s._v(\" \"),n(\"p\",[s._v(\"如果想要在子模块生成代码，输入n。\")]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_1-2在项目指定模块下生成代码-请输入模块名\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-2在项目指定模块下生成代码-请输入模块名\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"1.2在项目指定模块下生成代码，请输入模块名\")])]),s._v(\" \"),n(\"p\",[s._v(\"如果上一步输入n，则在这一步输入想要生成代码的子模块名。（上一步输入y，则跳过这一步）\")]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_1-3作者名-方便生成注解及作者相关\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-3作者名-方便生成注解及作者相关\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"1.3作者名（方便生成注解及作者相关）\")])]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_1-4代码生成的父级包名称-全路径\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-4代码生成的父级包名称-全路径\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"1.4代码生成的父级包名称（全路径）\")])]),s._v(\" \"),n(\"p\",[s._v('从模块/项目下的根包（Java的包）开始，以\".\"进行分级。')]),s._v(\" \"),n(\"p\",[s._v(\"例如：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"marchsoft.test2\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"h4\",{attrs:{id:\"_1-5生成在父级包下的指定子包名称-输入n代表直接在父级包下生成\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-5生成在父级包下的指定子包名称-输入n代表直接在父级包下生成\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"1.5生成在父级包下的指定子包名称（输入n代表直接在父级包下生成）\")])]),s._v(\" \"),n(\"p\",[s._v(\"如果还想在子包下生成，直接输入子包的名称；如果没有子包，即在上一步父包下生成，直接输入n。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"步骤二-确定以哪些数据库的表进行代码生成\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#步骤二-确定以哪些数据库的表进行代码生成\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"步骤二：确定以哪些数据库的表进行代码生成\")])]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_2-1是否选择所有数据库的表-请输入y-n\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-1是否选择所有数据库的表-请输入y-n\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"2.1是否选择所有数据库的表（请输入y/n）\")])]),s._v(\" \"),n(\"p\",[s._v(\"输入y将连接的目标数据库的所有表全部进行代码生成；输入n执行接下来选择表生成代码的策略。\")]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_2-2为输入生成数据库的表-n为输入排除数据库的表\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-2为输入生成数据库的表-n为输入排除数据库的表\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"2.2为输入生成数据库的表，n为输入排除数据库的表\")])]),s._v(\" \"),n(\"p\",[s._v(\"输入y代表采用选择数据库表的代码生成策略；输入n代表采用选择排除数据表的代码生成。\")]),s._v(\" \"),n(\"h4\",{attrs:{id:\"_2-3请输入生成或者排除数据库表的名称-多个用英文状态下的-分割\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-3请输入生成或者排除数据库表的名称-多个用英文状态下的-分割\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"2.3请输入生成或者排除数据库表的名称，多个用英文状态下的’,'分割\")])]),s._v(\" \"),n(\"p\",[s._v(\"输入表名后，按照相应的策略进行代码生成\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"参考\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#参考\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"参考\")])]),s._v(\" \"),n(\"p\",[s._v(\"我们在Mybatis-Plus代码生成器的基础上，进行了相应的配置。\")]),s._v(\" \"),n(\"p\",[s._v(\"使用及配置详情请参考：\"),n(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_42937522/article/details/110725251\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"自定义深度定制人性化的MyBatis-Plus的代码生成策略\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"h2\",{attrs:{id:\"数据权限\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据权限\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"数据权限\")])]),s._v(\" \"),n(\"p\",[s._v(\"本系统是基于部门做的一个简单数据权限控制，也就是通过用户角色中的数据权限控制用户能看哪些数据。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"注解方式\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#注解方式\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"注解方式\")])]),s._v(\" \"),n(\"p\",[s._v(\"现可通过注解\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"@DataPermission\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"进行权限控制\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"数据权限-2\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据权限-2\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"数据权限\")])]),s._v(\" \"),n(\"p\",[s._v(\"系统提供了三种数据权限控制\")]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"全部数据权限：无数据权限限制\")]),s._v(\" \"),n(\"li\",[s._v(\"本级数据权限：限制只能看到本部门数据\")]),s._v(\" \"),n(\"li\",[s._v(\"自定义数据权限：可根据实际需要选择部门控制数据权限\")])]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image21.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"h2\",{attrs:{id:\"定时任务\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#定时任务\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"定时任务\")])]),s._v(\" \"),n(\"p\",[s._v(\"框架对定时任务做了整合\")]),s._v(\" \"),n(\"p\",[s._v(\"对于简单的定时任务可以只使用spring 的@sechduled 注解\")]),s._v(\" \"),n(\"p\",[s._v(\"对于动态管理动态任务，涉及到定时任务的增删改，以及数据库持久化储存，本框架整合了quartz，可通过后台管理页面对定时任务进行增删改查操作，\")]),s._v(\" \"),n(\"p\",[s._v(\"并对定时任务进行了日志监控\")]),s._v(\" \"),n(\"p\",[s._v(\"本模块的源码在 smpe-system\\\\src\\\\main\\\\java\\\\marchsoft\\\\modules\\\\quartz\")]),s._v(\" \"),n(\"p\",[s._v(\"后台页面展示：\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image22.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"p\",[s._v(\"### 具体使用步骤：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[s._v(\"新增定时任务\")])]),s._v(\" \"),n(\"p\",[s._v(\"打开定时任务调度界面，点击新增，填写具体参数\")]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image23.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"p\",[n(\"strong\",[s._v(\"参数解释\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"任务名称：当前任务的名称，可以自定义\")]),s._v(\" \"),n(\"li\",[s._v(\"任务描述：对该任务的描述\")]),s._v(\" \"),n(\"li\",[s._v(\"bean名称： 定时任务通过bean名称来获取具体执行的bean对象。需要执行的定时任务类，必须注入spring容器中。\")]),s._v(\" \"),n(\"li\",[s._v(\"执行方法：  需要执行的方法名称，底层是通过反射执行方法。\")]),s._v(\" \"),n(\"li\",[s._v(\"cron表达式：定时任务通过cron表达式控制任务执行的时间，具体内容可以查询官方cron表达式介绍\")]),s._v(\" \"),n(\"li\",[s._v(\"子任务id：子任务可以是当前已经定义过的任务的id，传入时需要用多个逗号隔开，当主任务执行后，子任务后按顺序依次执行。\")]),s._v(\" \"),n(\"li\",[s._v(\"任务负责人：该任务的负责人\")]),s._v(\" \"),n(\"li\",[s._v(\"告警邮箱：定时任务执行失败时会将失败信息通过邮箱发送给用户。如果有多个邮箱可以用逗号隔开，如果不需要则不用填。（该功能暂不支持）\")]),s._v(\" \"),n(\"li\",[s._v(\"失败后暂停：选择定时任务失败后是否暂停当前定时任务。\")]),s._v(\" \"),n(\"li\",[s._v(\"任务状态：选择是否开启当前定时任务。\")]),s._v(\" \"),n(\"li\",[s._v(\"参数内容： 填写参数内容，可向后端传一个字符串参数，具体使用方法见下图\")])]),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image24.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image25.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"img\",{attrs:{src:s.$withBase(\"/img/image26.png\"),alt:\"foo\"}}),s._v(\" \"),n(\"p\",[s._v(\"前端可以根据该参数向后端传需要执行的内容。\")]),s._v(\" \"),n(\"h3\",{attrs:{id:\"原理解释\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原理解释\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"原理解释\")])]),s._v(\" \"),n(\"p\",[s._v(\"本框架使用的是spring quartz框架，详细解释可以参考博客https://blog.csdn.net/qq_45473439/article/details/112725088\")]),s._v(\" \"),n(\"p\",[s._v(\"关于quartz框架的持久化操作，详情可以看本模块的源码 smpe-system\\\\src\\\\main\\\\java\\\\marchsoft\\\\modules\\\\quartz\")]),s._v(\" \"),n(\"h2\",{attrs:{id:\"异步线程池\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#异步线程池\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"异步线程池\")])]),s._v(\" \"),n(\"p\",[s._v(\"代码地址：smpe-common\\\\src\\\\main\\\\java\\\\marchsoft\\\\config\\\\bean\\\\AsyncTaskProperties.java\")]),s._v(\" \"),n(\"p\",[s._v(\"源码如下：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v('/**\\n * description:异步任务线程池装配类\\n *\\n * @author RenShiWei\\n * Date: 2020/7/12 21:58\\n * \\'@EnableAsync\\' 开启异步线程，\\n * 重写AsyncConfigurer的方法：使用@Async标注方法执行异步任务，每次都要添加注解，可以重写spring默认线程池的方式使用的时候，\\n * 只需要加@Async注解就可以，不用去声明线程池类。\\n */\\n@Slf4j\\n@Configuration\\n@EnableAsync\\n@RequiredArgsConstructor\\npublic class AsyncTaskExecutePool implements AsyncConfigurer {\\n\\n/** 注入配置类 */\\n    private final AsyncTaskProperties config;\\n\\n/**\\n     * description: 设置线程池的参数配置\\n     *\\n     * @author RenShiWei\\n     * Date: 2020/8/11 15:44\\n     */\\n    @Override\\n    public Executor getAsyncExecutor() {\\n        ThreadPoolTaskExecutor executor = new ThreadPoolTaskExecutor();\\n// 核心线程池大小\\n        executor.setCorePoolSize(config.getCorePoolSize());\\n// 最大线程数\\n        executor.setMaxPoolSize(config.getMaxPoolSize());\\n// 队列容量\\n        executor.setQueueCapacity(config.getQueueCapacity());\\n// 活跃时间\\n        executor.setKeepAliveSeconds(config.getKeepAliveSeconds());\\n// 线程名字前缀\\n        executor.setThreadNamePrefix(\"smpe-async-\");\\n// setRejectedExecutionHandler：当pool已经达到max size的时候，如何处理新任务\\n        // CallerRunsPolicy：不在新线程中执行任务，而是由调用者所在的线程来执行\\n        executor.setRejectedExecutionHandler(new ThreadPoolExecutor.CallerRunsPolicy());\\n        executor.initialize();\\nreturn executor;\\n    }\\n\\n/**\\n     * description: 异步任务的异常处理\\n     *\\n     * @author RenShiWei\\n     * Date: 2020/8/11 15:40\\n     */\\n    @Override\\n    public AsyncUncaughtExceptionHandler getAsyncUncaughtExceptionHandler() {\\n        return (throwable, method, objects) -> {\\n            log.error(\"====\" + throwable.getMessage() + \"====\", throwable);\\n            log.error(\"exception method:\" + method.getName());\\n        };\\n    }\\n\\n}\\n')])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"49\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"50\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"51\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"52\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"53\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"54\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"55\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"56\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"57\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"58\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"59\")]),n(\"br\")])]),n(\"p\",[s._v(\"使用方式如下\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"使用@EnableAsync来开启异步的支持，使用@Async来对某个方法进行异步执行。\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"线程池工具\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#线程池工具\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"线程池工具\")])]),s._v(\" \"),n(\"p\",[s._v(\"代码地址：smpe-common\\\\src\\\\main\\\\java\\\\marchsoft\\\\utils\\\\ThreadPoolExecutorUtil.java\")]),s._v(\" \"),n(\"p\",[s._v(\"源码如下：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n * description: 自定义线程池工具类\\n *\\n * @author RenShiWei\\n * Date: 2020/7/12 21:58\\n */\\npublic class ThreadPoolExecutorUtil {\\n\\npublic static ThreadPoolExecutor getPoll() {\\n        AsyncTaskProperties properties = SpringContextHolder.getBean(AsyncTaskProperties.class);\\nreturn new ThreadPoolExecutor(\\n                properties.getCorePoolSize(),\\n                properties.getMaxPoolSize(),\\n                properties.getKeepAliveSeconds(),\\n                TimeUnit.SECONDS,\\nnew ArrayBlockingQueue<>(properties.getQueueCapacity()),\\nnew TheadFactoryName());\\n    }\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),n(\"br\")])]),n(\"p\",[s._v(\"使用方式:\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"privatefinalstaticThreadPoolExecutor executor =ThreadPoolExecutorUtil.getPoll();\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"分页实现\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分页实现\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"分页实现\")])]),s._v(\" \"),n(\"ul\",[n(\"li\",[s._v(\"后端实现分页：本项目在smpe-common模块utils包下的PageUtil中封装了适用于多种情况的分页查询。\\n\"),n(\"ul\",[n(\"li\",[s._v(\"例如：\")])])])]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"/**\\n * description:根据分页条件构建分页查询IPage\\n *\\n * @param current       当前页\\n * @param size          当前页条数\\n * @param orderItemList 排序规则集合\\n * @return IPage查询条件\\n * @author RenShiWei\\n * Date: 2020/11/22 17:19\\n */\\npublic static <K> IPage<K> buildPage(int current, int size, List<OrderItem> orderItemList) {\\n    Page<K> page = new Page<>(current, size);\\n    page.addOrder(orderItemList);\\n    return page;\\n}\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),n(\"br\")])]),n(\"p\",[s._v(\"常见坑点1：\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"selectPostById\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\")])]),n(\"p\",[s._v(\"莫名其妙的分页。例如下面这段代码\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"startPage();\\nList<User> list;\\nif(user !=null){ \\n    list = userService.selectUserList(user);\\n}else{\\n     list =newArrayList<User>();\\n}\\nPost post = postService.selectPostById(1L);\\nreturngetDataTable(list);\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\")])]),n(\"p\",[s._v(\"原因分析：这种情况下由于' user ' 存在' null ' 的情况，就会导致 ' pageHelper '生产了一个分页参数，但是没有被消费，这个参数就会一直保留在这个线程上。 当这个线程再次被使用时，就可能导致不该分页的方法去消费这个分页参数，这就产生了莫名其妙的分页。\")]),s._v(\" \"),n(\"p\",[s._v(\"上面这个代码，应该写成下面这个样子才能保证安全。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"List<User> list;\\nif(user !=null){\\n    startPage(); \\t\\n    list = userService.selectUserList(user);\\n}else{ \\t\\n    list =newArrayList<User>();\\n}\\nPost post = postService.selectPostById(1L);\\nreturngetDataTable(list);\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),n(\"br\")])]),n(\"p\",[s._v(\"常见坑点2：添加了  ’ startPage ’方法。也没有正常分页。例如下面这段代码\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"startPage();\\nPost post = postService.selectPostById(1L);\\nList<User> list = userService.selectUserList(user);\\nreturn getDataTable(list);\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"原因分析：只对该语句以后的第一个查询 （Select）语句得到的数据进行分页。\")]),s._v(\" \"),n(\"p\",[s._v(\"上面这个代码，应该写成下面这个样子才能正常分页。\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"Post post = postService.selectPostById(1L);\\nstartPage();\\nList<User> list = userService.selectUserList(user);\\nreturngetDataTable(list);\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),n(\"br\")])]),n(\"p\",[s._v(\"注意\")]),s._v(\" \"),n(\"p\",[s._v(\"如果改为其他数据库需修改配置 '  application-dev.yml '文件中的属性\")]),s._v(\" \"),n(\"div\",{staticClass:\"language- line-numbers-mode\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[s._v(\"url:你的数据库\\nusername: 用户名\\npassword: 密码\\n\")])]),s._v(\" \"),n(\"div\",{staticClass:\"line-numbers-wrapper\"},[n(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),n(\"br\"),n(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),n(\"br\")])]),n(\"h2\",{attrs:{id:\"部署项目todo\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#部署项目todo\"}},[s._v(\"#\")]),s._v(\" \"),n(\"strong\",[s._v(\"部署项目todo\")])]),s._v(\" \"),n(\"p\",[s._v(\"参考：\")]),s._v(\" \"),n(\"ol\",[n(\"li\",[n(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_42937522/article/details/106274293\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"docker安装及docker常用命令\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_42937522/article/details/107755941\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"docker 构建git+maven+jdk8的centos7环境，实现轻量级的springboot项目的自动化部署\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_42937522/article/details/108179441\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"docker安装nginx规范所有项目的反向代理(一个项目一个反向代理的conf配置文件)\"),n(\"OutboundLink\")],1)]),s._v(\" \"),n(\"li\",[n(\"a\",{attrs:{href:\"https://blog.csdn.net/qq_42937522/article/details/108702775\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"docker 构建centos7+git+nvm镜像，实现自主切换node版本统一部署前端vue项目\"),n(\"OutboundLink\")],1)])])])}),[],!1,null,null,null);e.default=t.exports}}]);","extractedComments":[]}